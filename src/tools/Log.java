package tools;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;

public class Log {
	
	public static enum type {envi, stat, analysis};
	
	private static String ENVI_ST = "//Hyper-parallelized CMS environment setup version 1.0\n";
	private static String STAT_ST = "//Hyper-parallelized CMS multi-threaded statistical analysis version 1.0\n";
	private static String ANAL_ST = "//Hyper-parallelized CMS synthesis and calculation\n";
	private static String DEF_ST = "//CMS version 1.0\n";
	private static String BEGIN1 = "//Log created to produce compilation messages and to aid in "
					+ "debugging and configuration\n";
	private static String BEGIN2 = "//Generated by BYU Bioinformatics, all rights reserved\n\n";
	
	private File log_file;
	private PrintWriter wr;
	
	public Log() {
		
		try {
			
			log_file = createLogFile("Log");
			
			wr = new PrintWriter(log_file);
			addLine(DEF_ST);
			add(BEGIN1);
			add(BEGIN2);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public Log(Log.type type) {
		
		try {
			
			if(type == Log.type.envi) {
				
				log_file = createLogFile("Envi_Log");
				wr = new PrintWriter(log_file);
				add(ENVI_ST);
				
			} else if(type == Log.type.stat) {
				
				log_file = createLogFile("Stats_Log");
				wr = new PrintWriter(log_file);
				add(STAT_ST);
				
			} else if(type == Log.type.analysis) {
				
				log_file = createLogFile("Analysis_Log");
				wr = new PrintWriter(log_file);
				add(ANAL_ST);
				
			} else {
				
				log_file = createLogFile("Log");
				wr = new PrintWriter(log_file);
				add(DEF_ST);
			}

			add(BEGIN1);
			add(BEGIN2);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	public Log(Log.type type, int win_num) {
		
		try {
			
			if(type != Log.type.stat) {
				//TODO: throw new error
			}
			
			log_file = new File("Stats_Log_win" + win_num + ".txt");
			wr = new PrintWriter(log_file);
			add(STAT_ST);
			add(BEGIN1);
			add(BEGIN2);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void addLine(String args) {
		wr.write(args + "\n");
		wr.flush();
	}
	
	public void add(String args) {
		wr.write(args);
		wr.flush();
	}
	
	public void close() {
		wr.close();
	}
	
	private File createLogFile(String name) throws IOException {
		
		int num = 1;
		File file = new File(name + ".txt");
		
		while(file.exists()) {
			file = new File(name + num + ".txt");
			num++;
		}
		
		file.createNewFile();
		return file;
	}
}

